#!/usr/bin/env bash

set -eu

# Dependency checking
if ! [ -x "$(command -v xrandr)" ]
then
	echo "Error: xrandr is not installed."
	exit 1
fi

if ! [ -x "$(command -v ffmpeg)" ]
then
	echo "Error: ffmpeg is not installed."
	exit 1
fi

MONITOR_NUMBER=
# Video Framerate
FPS="30"

while [ ! $# -eq 0 ]
do
	case "$1" in
		-h | --help)
			echo "$0 - Shadowplay On Linux"
			echo ""
			echo "$0 [options] [value]"
			echo ""
			echo "options:"
			echo "-h,  --help               show help"
			echo "-f,  --framerate=FPS      set framerate"
			echo "-m,  --monitor-number=NUM set monitor number"
			exit
		;;
		-f | --framerate)
			FPS=$2
		;;
		-m | --monitor-number)
			MONITOR_NUMBER=$2
		;;
	esac
	shift
done

# Pick monitor
if [ -z "$MONITOR_NUMBER" ]
then
	xrandr --listactivemonitors
	read -r -p "Which monitor: " MONITOR_NUMBER
fi

# Monitor information
MONITOR_INFO=$(xrandr --listactivemonitors | grep "$MONITOR_NUMBER:" | cut -f4 -d' ')
MONITOR_HEIGHT=$(echo "$MONITOR_INFO" | cut -f2 -d'/' | cut -f2 -d'x')
MONITOR_WIDTH=$(echo "$MONITOR_INFO" | cut -f1 -d'/')
MONITOR_X=$(echo "$MONITOR_INFO" | cut -f2 -d'+')
MONITOR_Y=$(echo "$MONITOR_INFO" | cut -f3 -d'+')

# If you want to use CPU-encoding
# instead, set to true.
SOFTWARE_ENCODE=false

# Common encoders are:
# h264
# hevc
# h265
ENCODER_STANDARD=h264

# Size of replay buffer to save
# Format is
#     hh:mm:ss
REPLAY_BUFFER="00:05:00"

# Location to save recordings
VIDEO_FOLDER=$(xdg-user-dir VIDEOS || echo "$HOME/Videos/")

if [ ! -d "$VIDEO_FOLDER" ]; then
    mkdir "$VIDEO_FOLDER"
fi

if lspci | grep VGA | grep ATI >/dev/null;then
    ENCODER_API=vaapi
elif lspci | grep VGA | grep NVIDIA >/dev/null;then
    ENCODER_API=nvenc
elif lspci | grep VGA | grep Intel >/dev/null;then
    ENCODER_API=qsv
fi

ENCODER="$ENCODER_STANDARD"_"$ENCODER_API"

if $SOFTWARE_ENCODE;then
    ENCODER_API=
    ENCODER=libx264
fi

BASEDIR=$(dirname "$0")

DATE=$(date +%Y-%d-%m-%H:%M:%S)
FILE="$VIDEO_FOLDER"/replay-"$DATE".mp4

case $ENCODER_API in
    "vaapi")
        ffmpeg_command(){
            ffmpeg \
                -threads 0 \
                -thread_queue_size 32768 \
                -f x11grab \
                -s "$MONITOR_WIDTH"x"$MONITOR_HEIGHT" \
                -r ${FPS} \
                -i "$DISPLAY"+"$MONITOR_X","$MONITOR_Y" \
                -f pulse -i default \
                -ar 44100 \
                -c:v "$ENCODER" -vf format='nv12|vaapi,hwupload' -vaapi_device /dev/dri/renderD128 \
                -y \
                /tmp/shadowplay.mp4
            };;
    "nvenc")    
        ffmpeg_command(){
            ffmpeg \
                -f pulse -i default \
                -f x11grab \
                -framerate ${FPS} \
                -s "$MONITOR_WIDTH"x"$MONITOR_HEIGHT" \
                -i "$DISPLAY"+"$MONITOR_X","$MONITOR_Y" \
                -c:v "$ENCODER" \
                -preset:v llhq \
                -profile:v high \
                -pix_fmt nv12 \
                -b:v 15M \
                -acodec aac \
                -y \
                /tmp/shadowplay.mp4
            };;
    "qsv")      
        ffmpeg_command(){
            ffmpeg \
                -threads 0 \
                -thread_queue_size 32768 \
                -f x11grab \
                -s "$MONITOR_WIDTH"x"$MONITOR_HEIGHT" \
                -r ${FPS} \
                -i "$DISPLAY"+"$MONITOR_X","$MONITOR_Y" \
                -f pulse -ac 2 -i default \
                -ar 44100 \
                -c:v "$ENCODER" \
                -y \
                /tmp/shadowplay.mp4
            };;
    *)
        ffmpeg_command(){
            ffmpeg \
                -threads 0 \
                -thread_queue_size 32768 \
                -f x11grab \
                -s "$MONITOR_WIDTH"x"$MONITOR_HEIGHT" \
                -r ${FPS} \
                -i "$DISPLAY"+"$MONITOR_X","$MONITOR_Y" \
                -f pulse -i default \
                -ar 44100 \
                -c:v "$ENCODER" -preset medium \
                -y \
                /tmp/shadowplay.mp4
            };;
esac

ffmpeg_command ||

ffmpeg \
    -sseof -$REPLAY_BUFFER \
    -i /tmp/shadowplay.mp4 \
    -vcodec copy -acodec copy \
    "$FILE" -loglevel quiet &&

rm /tmp/shadowplay.mp4 &&

cd "$BASEDIR" &&
    
$0 -m $MONITOR_NUMBER
